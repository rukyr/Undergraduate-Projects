public static <T> boolean isomorphic(BTNode<T> T1, BTNode<T> T2) {

if(T1 == null && T2 == null){
               return true;
             }

         if((T1 == null && T2 != null) || (T1 != null && T2 == null)){
           return false;
         }

         int childrenCountForT1 = 0;
         if ( T1.left != null ) { childrenCountForT1 = childrenCountForT1 + 1 ; }
         if ( T1.right != null ) { childrenCountForT1 = childrenCountForT1 + 1 ; }

         int childrenCountForT2 = 0;
         if ( T2.left != null ) { childrenCountForT2 = childrenCountForT2 + 1 ; }
         if ( T2.right != null ) { childrenCountForT2 = childrenCountForT2 + 1 ; }

         if ( childrenCountForT1 != childrenCountForT2 ) return false;

         return ( (isomorphic(T1.left, T2.left) && (isomorphic(T1.right, T2.right))) ||
                  (isomorphic(T1.left, T2.right) && (isomorphic(T1.right, T2.left))) );

     }
